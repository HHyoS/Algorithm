#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include <memory.h>
#include <algorithm>
#include <vector>
#include <queue>
using namespace std;

struct Infomation {
    int index;
    int k;
};

vector<Infomation> tmp[5001];
int ans = 0;

int bfs(int start,int maxi) {
    bool visited[5001] = { 0 };

    visited[start] = 1;
    queue<int> que;
    que.push(start);
    int answerCnt = 0;
    while (!que.empty()) {
        int index = que.front();
        que.pop();
        for (int a = 0; a < tmp[index].size(); ++a) {
            Infomation next = tmp[index][a];
            if (visited[next.index]) continue;
            if (next.k < maxi) continue;
            ++answerCnt;
            visited[next.index] = 1;
            que.push(next.index);

        }
    }
    return answerCnt;
}
int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

   // freopen("input.txt", "r", stdin);
    int N, Q;
    cin >> N >> Q;
    for (int a = 0; a < N-1; ++a) {
        int p, q, r;
        cin >> p >> q >> r;
        tmp[p].push_back({ q,r });
        tmp[q].push_back({ p,r });
    }

    for (int a = 0; a < Q; ++a) {
        int start, maxi;
        cin >> maxi >> start;
        cout << bfs(start, maxi) << "\n";;
    }
    return 0;

}
